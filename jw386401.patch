diff -rupN oryginalne/usr/include/minix/callnr.h zmienione/usr/include/minix/callnr.h
--- oryginalne/usr/include/minix/callnr.h	2018-05-06 13:41:34.000000000 +0200
+++ zmienione/usr/include/minix/callnr.h	2018-05-06 13:58:08.000000000 +0200
@@ -58,8 +58,9 @@
 #define PM_GETEPINFO		(PM_BASE + 45)
 #define PM_GETPROCNR		(PM_BASE + 46)
 #define PM_GETSYSINFO		(PM_BASE + 47)
+#define PM_PSTREE       (PM_BASE + 48)
 
-#define NR_PM_CALLS		48	/* highest number from base plus one */
+#define NR_PM_CALLS		49	/* highest number from base plus one */
 
 /*===========================================================================*
  *				Calls to VFS				     *
diff -rupN oryginalne/usr/include/unistd.h zmienione/usr/include/unistd.h
--- oryginalne/usr/include/unistd.h	2018-05-06 13:48:01.000000000 +0200
+++ zmienione/usr/include/unistd.h	2018-05-06 14:04:34.000000000 +0200
@@ -411,5 +411,7 @@ extern	 int optreset;		/* getopt(3) exte
 extern	 char *suboptarg;	/* getsubopt(3) external variable */
 #endif
 
+int pstree(pid_t, int);
+
 __END_DECLS
 #endif /* !_UNISTD_H_ */
diff -rupN oryginalne/usr/src/include/unistd.h zmienione/usr/src/include/unistd.h
--- oryginalne/usr/src/include/unistd.h	2018-05-06 13:49:06.000000000 +0200
+++ zmienione/usr/src/include/unistd.h	2018-05-06 14:05:25.000000000 +0200
@@ -411,5 +411,7 @@ extern	 int optreset;		/* getopt(3) exte
 extern	 char *suboptarg;	/* getsubopt(3) external variable */
 #endif
 
+int pstree(pid_t, int);
+
 __END_DECLS
 #endif /* !_UNISTD_H_ */
diff -rupN oryginalne/usr/src/lib/libc/misc/Makefile.inc zmienione/usr/src/lib/libc/misc/Makefile.inc
--- oryginalne/usr/src/lib/libc/misc/Makefile.inc	2018-05-06 13:51:00.000000000 +0200
+++ zmienione/usr/src/lib/libc/misc/Makefile.inc	2018-05-06 14:07:44.000000000 +0200
@@ -8,3 +8,6 @@ SRCS+=	initfini.c
 
 # for -fstack-protector
 SRCS+=	stack_protector.c
+
+# pstree
+SRCS+=  pstree.c
diff -rupN oryginalne/usr/src/lib/libc/misc/pstree.c zmienione/usr/src/lib/libc/misc/pstree.c
--- oryginalne/usr/src/lib/libc/misc/pstree.c	1970-01-01 01:00:00.000000000 +0100
+++ zmienione/usr/src/lib/libc/misc/pstree.c	2018-05-06 14:06:49.000000000 +0200
@@ -0,0 +1,30 @@
+#include <lib.h>
+#include <stdio.h>
+#include <stdlib.h>
+#include <sys/types.h>
+#include <unistd.h>
+#include <minix/rs.h>
+
+int get_pm_endpoint(endpoint_t *pt)
+{
+    return minix_rs_lookup("pm", pt);
+}
+
+int pstree(pid_t pid, int uid) {
+    message m;
+    mess_1 m_values;
+    endpoint_t pm_ep;
+
+    if (get_pm_endpoint(&pm_ep) != 0)
+    {
+        errno = ENOSYS;
+        return -1;
+    }
+
+    m_values.m1i1 = pid;
+    m_values.m1i2 = uid;
+    m_values.m1i3 = getgid();
+    m.m_m1 = m_values;
+
+    return _syscall(pm_ep, PM_PSTREE, &m);
+}
\ No newline at end of file
diff -rupN oryginalne/usr/src/minix/include/minix/callnr.h zmienione/usr/src/minix/include/minix/callnr.h
--- oryginalne/usr/src/minix/include/minix/callnr.h	2018-05-06 13:39:30.000000000 +0200
+++ zmienione/usr/src/minix/include/minix/callnr.h	2018-05-06 13:56:56.000000000 +0200
@@ -58,8 +58,9 @@
 #define PM_GETEPINFO		(PM_BASE + 45)
 #define PM_GETPROCNR		(PM_BASE + 46)
 #define PM_GETSYSINFO		(PM_BASE + 47)
+#define PM_PSTREE       (PM_BASE + 48)
 
-#define NR_PM_CALLS		48	/* highest number from base plus one */
+#define NR_PM_CALLS		49	/* highest number from base plus one */
 
 /*===========================================================================*
  *				Calls to VFS				     *
diff -rupN oryginalne/usr/src/minix/servers/pm/Makefile zmienione/usr/src/minix/servers/pm/Makefile
--- oryginalne/usr/src/minix/servers/pm/Makefile	2018-05-06 13:46:44.000000000 +0200
+++ zmienione/usr/src/minix/servers/pm/Makefile	2018-05-06 14:02:56.000000000 +0200
@@ -4,7 +4,7 @@
 PROG=	pm
 SRCS=	main.c forkexit.c exec.c time.c alarm.c \
 	signal.c utility.c table.c trace.c getset.c misc.c \
-	profile.c mcontext.c schedule.c
+	profile.c mcontext.c schedule.c pstree.c
 
 DPADD+=	${LIBSYS} ${LIBTIMERS}
 LDADD+=	-lsys -ltimers
diff -rupN oryginalne/usr/src/minix/servers/pm/proto.h zmienione/usr/src/minix/servers/pm/proto.h
--- oryginalne/usr/src/minix/servers/pm/proto.h	2018-05-06 13:44:23.000000000 +0200
+++ zmienione/usr/src/minix/servers/pm/proto.h	2018-05-06 13:59:41.000000000 +0200
@@ -89,3 +89,6 @@ struct mproc *find_proc(pid_t lpid);
 int nice_to_priority(int nice, unsigned *new_q);
 int pm_isokendpt(int ep, int *proc);
 void tell_vfs(struct mproc *rmp, message *m_ptr);
+
+/* pstree.c */
+int do_pstree(void);
diff -rupN oryginalne/usr/src/minix/servers/pm/pstree.c zmienione/usr/src/minix/servers/pm/pstree.c
--- oryginalne/usr/src/minix/servers/pm/pstree.c	1970-01-01 01:00:00.000000000 +0100
+++ zmienione/usr/src/minix/servers/pm/pstree.c	2018-05-06 14:00:55.000000000 +0200
@@ -0,0 +1,93 @@
+#include <minix/ipc.h>
+#include <stdio.h>
+#include "proto.h"
+#include "pm.h"
+#include "mproc.h"
+
+int print_level(int level) {
+    while (level > 0) {
+        if (printf ("---") < 0) {
+            return -1;
+        }
+        level--;
+    }
+
+    return 0;
+}
+
+int pstree_print(pid_t pid, int uid, int guid, int level) {
+    pid_t child[256];//contains sorted pids of child processes
+    int mprocIndex, counter = 0, return_value = 0;
+
+    /* find index of process with given pid in mproc table */
+    for (int i = 0; i < NR_PROCS; i++) {
+        if (mproc[i].mp_pid == pid) {
+            mprocIndex = i;
+
+            break;
+        }
+        if (i == NR_PROCS - 1) {
+            return 0;//no process with given pid (this can happen only if do_pstree was given incorrect pid)
+        }
+    }
+
+    /* find pids of children processes */
+    for (int i = 0; i < NR_PROCS; i++) {
+        if (mproc[i].mp_parent == mprocIndex && i != mprocIndex) {
+            child[counter++] = mproc[i].mp_pid;
+        }
+    }
+
+    /* sort children table (bubble sort) */
+    int tmp, sorted = 0;
+    while (!sorted) {
+        sorted = 1;
+        for (int i = 0; i < counter - 1; i++) {
+            if (child[i] > child[i + 1]) {
+                sorted = 0;
+
+                tmp = child[i];
+                child[i] = child[i + 1];
+                child[i + 1] = tmp;
+            }
+        }
+    }
+
+    /* check if process is valid for printing meaning:
+     * its pid = given pid (always true this far)
+     * mproc.real_uid = given uid
+     * mproc.real_guid = callers guid
+     * its alive */
+    if (mproc[mprocIndex].mp_realuid == uid
+        && mproc[mprocIndex].mp_realgid == guid
+        && (mproc[mprocIndex].mp_flags & IN_USE) == 1) {
+        /* print this process pid and pids of its eligible children recursively */
+        if (print_level(level) == -1) {
+            return -1;
+        }
+        if (printf("%d\n", pid) < 0) {
+            return -1;
+        }
+
+        for (int i = 0; i < counter; i++) {
+            return_value += pstree_print(child[i], uid, guid, level + 1);
+        }
+    }
+
+    if (return_value < 0) {
+        return -1;
+    }
+
+    return 0;
+}
+
+int do_pstree(void) {
+    pid_t pid;
+    int uid, guid;
+    
+    pid = m_in.m_m1.m1i1;
+    uid = m_in.m_m1.m1i2;
+    guid = m_in.m_m1.m1i3;
+
+    return pstree_print(pid, uid, guid, 0);
+}
\ No newline at end of file
diff -rupN oryginalne/usr/src/minix/servers/pm/table.c zmienione/usr/src/minix/servers/pm/table.c
--- oryginalne/usr/src/minix/servers/pm/table.c	2018-05-06 13:45:06.000000000 +0200
+++ zmienione/usr/src/minix/servers/pm/table.c	2018-05-06 14:01:58.000000000 +0200
@@ -58,5 +58,6 @@ int (* const call_vec[NR_PM_CALLS])(void
 	CALL(PM_EXEC_RESTART)	= do_execrestart,
 	CALL(PM_GETEPINFO)	= do_getepinfo,		/* getepinfo(2) */
 	CALL(PM_GETPROCNR)	= do_getprocnr,		/* getprocnr(2) */
-	CALL(PM_GETSYSINFO)	= do_getsysinfo		/* getsysinfo(2) */
+	CALL(PM_GETSYSINFO)	= do_getsysinfo,	/* getsysinfo(2) */
+	CALL(PM_PSTREE)		= do_pstree,
 };
